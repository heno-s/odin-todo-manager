(()=>{"use strict";function t(t){const e=function(t){const{title:e,description:o,priority:d,dueDate:s,id:i}=t,c=document.createElement("div");c.classList.add("todo");const n=document.createElement("input");switch(n.type="checkbox",n.classList.add("priority"),+d){case 0:default:n.classList.add("priority-low");break;case 1:n.classList.add("priority-medium");break;case 2:n.classList.add("priority-high")}const a=document.createElement("div");a.classList.add("todo-body");const r=document.createElement("div");if(r.classList.add("todo-title"),r.textContent=e,a.appendChild(r),o){const t=document.createElement("div");t.classList.add("todo-description"),t.textContent=o.substr(0,30),a.appendChild(t)}if(s){const t=document.createElement("div");t.classList.add("todo-due-date");const e=document.createElement("div");e.classList.add("mdi"),e.classList.add("mdi-calendar-clock-outline");const o=document.createElement("div");o.classList.add("todo-date"),o.textContent=s,t.appendChild(e),t.appendChild(o),a.appendChild(t)}const l=document.createElement("div");return l.classList.add("mdi"),l.classList.add("mdi-trash-can-outline"),c.appendChild(n),c.appendChild(a),c.appendChild(l),c.id=i,c}(t);document.querySelector(".todos").appendChild(e)}const e={toggleTodoForm:function(){document.querySelector(".add-task").classList.toggle("hide"),document.querySelector(".todo-form").classList.toggle("hide")},appendProject:function(t){const e=function(t){const{title:e,id:o}=t,d=document.createElement("li");d.classList.add("project"),d.id=o;const s=document.createElement("span");s.classList.add("project-name"),s.textContent=e;const i=document.createElement("div");return i.classList.add("mdi"),i.classList.add("mdi-trash-can-outline"),d.appendChild(s),d.appendChild(i),d}(t);document.querySelector(".projects").appendChild(e)},setActiveProject:function(e){document.getElementById(e.id).classList.add("active"),document.querySelector(".project.active").classList.remove(".ative"),document.querySelector(".todos").innerHTML="",e.todos.forEach(t)},appendTodo:t};class o{#t=[];#e=0;constructor(t){this.title=t,this.#e="id"+Math.random().toString(16).slice(2)}addTodo(t){this.#t.push(t),e.appendTodo(t)}removeTodo(t){this.#t.splice(t,1)}getTodo(t){return this.#t.find((e=>e.id===t))}get id(){return this.#e}static setActive(t){o.#o=t,e.setActiveProject(t)}get todos(){return[...this.#t]}static#o;static get active(){return o.#o}}class d{checked=!1;#e=null;constructor(t,e,o,d){this.title=t,this.description=e,this.priority=o,this.dueDate=d,this.#e="id"+Math.random().toString(16).slice(2)}get id(){return this.#e}}!function(){const t=[],s=new o("Today"),i=new d("Go out with trash","this is some randome not so short description",1,new Date),c=new d("Go shopping","this is some randome longer description about how awesome is this todo",0,new Date);s.addTodo(i),s.addTodo(c);const n=new o("Tomorrow"),a=new d("Go out with trash tomorrow","this is some randome not so short description",1,new Date),r=new d("Go shopping tomorrow","this is some randome longer description about how awesome is this todo",0,new Date);n.addTodo(a),n.addTodo(r),t.push(s,n),t.forEach(e.appendProject),o.setActive(s)}();const s=document.querySelector(".add-task"),i=document.querySelector(".todo-form"),c=document.querySelector(".todos");s.addEventListener("click",(t=>{e.toggleTodoForm()})),i.addEventListener("submit",(t=>{t.preventDefault();const[s,c,n,a]=[i.title.value,i.description.value,i.priority.value,i.dueDate.value],r=new d(s,c,n,a);o.active.addTodo(r),i.reset(),e.toggleTodoForm()})),c.addEventListener("click",(t=>{if("checkbox"===t.target.type){const e=t.target.closest(".todo");o.active.getTodo(e.id).checked=t.target.checked}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,